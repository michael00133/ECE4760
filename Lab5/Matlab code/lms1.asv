%noise cancellation

clear
close all

order=10;

size=2;                         %time duration of inputs
fs=8192;                                %digital sampling frequency
t=[0:1/fs:size];
N=fs*size+1;                      %size of inputs
f1=3500/2;                                %frequency of voice
f2=9900/2;                                %frequency of noise

voice=cos(2*pi*f1*t);
[voice fs] =wavread('C:\Users\User\Downloads\troll_8.wav');
% fs=voice.fs;
% voice=voice.y';
voice=voice(1:fs*10)';
N=length(voice);
t=[0:1/fs:(N-1)/fs];
% voice=zeros(1,N);
subplot(4,1,1)
plot(t,voice);
title('voice    (don''t have access to)')

noise=cos(2*pi*rand(1,N)*f2.*t);                                %increasy frequency noise
%noise=.1*rand(1,length(voice));                %white noise
primary=voice+0.5*noise;
subplot(4,1,2)
plot(t,primary)
title('primary = voice + noise   (input1)')

ref=noise+0.1*rand(1,N);                                             %noisy noise
subplot(4,1,3)
plot(t,ref)
title('reference  (noisy noise)   (input2)');

w=zeros(order,N);
mu=0.006;

for i=order:N
   buffer = ref(i-order+1:i);                                   %current 32 points of reference
   desired(i) = primary(i)-buffer*w(:,i-1);                    %dot product reference and coeffs
   %mu=0.95*2/(5*(0.001+var(buffer)));
   w(:,i)=w(:,i-1)+(buffer.*mu*desired(i)/(buffer*buffer'+0.000001))';%update coeffs
end

subplot(4,1,4)
plot(t(order:N),desired(order:N))
title('Adaptive output  (hopefully it''s close to "voice")')

c=@(
